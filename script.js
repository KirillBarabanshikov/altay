// import puppeteer from "puppeteer";
// import fs from "fs-extra";
// import fetch from "node-fetch";
// import path from "path";
// import { URL } from "url";
//
// const URL_SITE = "http://altay.local/sanatoriums"; // –°–∞–π—Ç —Å–æ —Å–ª–∞–π–¥–µ—Ä–∞–º–∏
// const TRIGGER_SELECTOR = ".item"; // –°–µ–ª–µ–∫—Ç–æ—Ä –∫–Ω–æ–ø–æ–∫
// const IMAGE_SELECTOR = ".item img"; // –°–µ–ª–µ–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
// const OUTPUT_FOLDER = "./images"; // –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
//
// function delay(ms) {
//   return new Promise((resolve) => setTimeout(resolve, ms));
// }
//
// async function scrapeImages() {
//   const browser = await puppeteer.launch({ headless: false });
//   const page = await browser.newPage();
//   await page.goto(URL_SITE, { waitUntil: "networkidle2" });
//
//   // await delay(5000);
//   //
//   // const seasons = await page.$$(".event");
//   // await seasons[0].click();
//
//   await delay(5000);
//
//   // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ —Ç—Ä–µ—Ç–∏–π —Ç—Ä–∏–≥–≥–µ—Ä (–∏–Ω–¥–µ–∫—Å 2)
//   // const buttons = await page.$$(TRIGGER_SELECTOR);
//   // if (buttons.length >= 3) {
//   //   await buttons[9].click();
//   //   console.log("‚úÖ –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ —Ç—Ä–µ—Ç–∏–π —Ç—Ä–∏–≥–≥–µ—Ä...");
//   //   await page.waitForSelector(IMAGE_SELECTOR, { visible: true });
//   //   console.log("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã–ª–æ—Å—å, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...");
//   // } else {
//   //   console.error("‚ùå –û—à–∏–±–∫–∞: –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –º–µ–Ω—å—à–µ —Ç—Ä—ë—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤.");
//   //   await browser.close();
//   //   return;
//   // }
//
//   // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
//   const baseUrl = new URL(URL_SITE).origin; // –î–æ–º–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
//   const imageUrls = await page.$$eval(
//     IMAGE_SELECTOR,
//     (images, base) =>
//       images.map((img) =>
//         img.src.startsWith("http") ? img.src : `${base}${img.src}`
//       ),
//     baseUrl
//   );
//
//   console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${imageUrls.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
//   console.log("üîç –°–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:", imageUrls);
//
//   await browser.close();
//
//   // –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É
//   await fs.ensureDir(OUTPUT_FOLDER);
//
//   // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
//   for (const url of imageUrls) {
//     console.log("‚¨á –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å:", url);
//     await downloadImage(url);
//   }
// }
//
// async function downloadImage(url) {
//   try {
//     const response = await fetch(url);
//     if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${url}`);
//
//     const buffer = Buffer.from(await response.arrayBuffer()); // –ò—Å–ø–æ–ª—å–∑—É–µ–º arrayBuffer()
//
//     const originalFilename = path.basename(new URL(url).pathname); // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
//     const ext = path.extname(originalFilename); // –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
//     const cleanFilename = originalFilename.split(".")[0] + ext; // –£–¥–∞–ª—è–µ–º —Ö–µ—à (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å)
//
//     const filePath = path.join(OUTPUT_FOLDER, cleanFilename);
//
//     await fs.writeFile(filePath, buffer);
//     console.log(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${filePath}`);
//   } catch (error) {
//     console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${url}:`, error.message);
//   }
// }
//
// scrapeImages();
